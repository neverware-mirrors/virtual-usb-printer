# Copyright 2019 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//common-mk/pkg_config.gni")

group("all") {
  deps = [
    ":virtual-usb-printer",
  ]
  if (use.test) {
    deps += [
      ":ipp-manager-testrunner",
      ":ipp-util-testrunner",
      ":load-config-testrunner",
      ":smart-buffer-testrunner",
    ]
  }
}

pkg_config("target_defaults") {
  pkg_deps = [
    "libbrillo",
    "libchrome-${libbase_ver}",
  ]
}

executable("virtual-usb-printer") {
  configs += [ ":target_defaults" ]
  sources = [
    "cups_constants.cc",
    "device_descriptors.cc",
    "ipp_manager.cc",
    "ipp_util.cc",
    "load_config.cc",
    "op_commands.cc",
    "server.cc",
    "smart_buffer.cc",
    "usb_printer.cc",
    "usbip.cc",
    "value_util.cc",
    "virtual_usb_printer.cc",
  ]
}

if (use.test) {
  pkg_config("test_config") {
    pkg_deps = [ "libchrome-test-${libbase_ver}" ]
  }

  executable("ipp-manager-testrunner") {
    configs += [
      "//common-mk:test",
      ":target_defaults",
      ":test_config",
    ]
    sources = [
      "ipp_manager.cc",
      "ipp_manager_test.cc",
      "ipp_util.cc",
      "smart_buffer.cc",
    ]
    deps = [
      "//common-mk/testrunner",
    ]
  }

  executable("ipp-util-testrunner") {
    # TODO(oka); Remove //common-mk:test by making testrunner to public_config //common-mk:test
    configs += [
      "//common-mk:test",
      ":target_defaults",
      ":test_config",
    ]
    sources = [
      "cups_constants.cc",
      "ipp_test.cc",
      "ipp_util.cc",
      "smart_buffer.cc",
      "value_util.cc",
    ]
    deps = [
      "//common-mk/testrunner",
    ]
  }

  executable("smart-buffer-testrunner") {
    configs += [
      "//common-mk:test",
      ":target_defaults",
      ":test_config",
    ]
    sources = [
      "smart_buffer.cc",
      "smart_buffer_test.cc",
      "value_util.cc",
    ]
    deps = [
      "//common-mk/testrunner",
    ]
  }

  executable("load-config-testrunner") {
    configs += [
      "//common-mk:test",
      ":target_defaults",
      ":test_config",
    ]
    sources = [
      "device_descriptors.cc",
      "load_config.cc",
      "load_config_test.cc",
      "value_util.cc",
    ]
    deps = [
      "//common-mk/testrunner",
    ]
  }
}
